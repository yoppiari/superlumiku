version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: lumiku-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-lumiku_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-lumiku_password}
      POSTGRES_DB: ${POSTGRES_DB:-lumiku_production}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-lumiku_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis (for job queue)
  redis:
    image: redis:7-alpine
    container_name: lumiku-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lumiku-app
    env_file:
      - .env.production
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-lumiku_user}:${POSTGRES_PASSWORD:-lumiku_password}@postgres:5432/${POSTGRES_DB:-lumiku_production}?schema=public
      POSTGRES_HOST: postgres
      POSTGRES_USER: ${POSTGRES_USER:-lumiku_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-lumiku_password}
      POSTGRES_DB: ${POSTGRES_DB:-lumiku_production}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NODE_ENV: production
    ports:
      - "80:80"
    volumes:
      - uploads_data:/app/backend/uploads
      - outputs_data:/app/backend/outputs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local
  outputs_data:
    driver: local
